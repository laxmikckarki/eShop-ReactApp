{"ast":null,"code":"import _toConsumableArray from \"/Users/student/Documents/personal-projects/eshop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/student/Documents/personal-projects/eshop/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n// here we define all the application level states and define actions to make the changes to the state\n\nexport var initialState = {\n  basket: []\n};\n\n//Selector\n\nexport var getBasketTotal = function getBasketTotal(basket) {\n  return basket?.reduce(function (amount, item) {\n    return item.price + amount;\n  }, 0).toFixed(2);\n};\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return _objectSpread({}, state, {\n        basket: [].concat(_toConsumableArray(state.basket), [action.item])\n      });\n    case \"REMOVE_FROM_BASKET\":\n      var index = state.basket.findIndex(function (basketItem) {\n        return basketItem.id === action.id;\n      });\n      var newBasket = _toConsumableArray(state.basket);\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\"Can't remove product(id: \".concat(action.id, \") as its not in the basket!\"));\n      }\n      return _objectSpread({}, state, {\n        basket: newBasket\n      });\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","basket","getBasketTotal","reduce","amount","item","price","toFixed","reducer","state","action","type","_objectSpread","concat","_toConsumableArray","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"sources":["/Users/student/Documents/personal-projects/eshop/src/reducer.js"],"sourcesContent":["// here we define all the application level states and define actions to make the changes to the state\n\nexport const initialState = {\n    basket: [],\n};\n\n//Selector\n\nexport var getBasketTotal = (basket) => {\n    return(basket?.reduce((amount, item) => item.price + amount, 0).toFixed(2));\n}\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case \"ADD_TO_BASKET\":\n            return {\n                ...state,\n                basket: [...state.basket, action.item],\n            }\n        \n        case \"REMOVE_FROM_BASKET\":\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id === action.id\n            );\n\n            let newBasket = [...state.basket];\n\n            if (index>=0) {\n                newBasket.splice(index, 1);\n            } else {\n                console.warn(\n                    `Can't remove product(id: ${action.id}) as its not in the basket!`\n                )\n            }\n\n            return {\n                ...state,\n                basket: newBasket\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default reducer;\n"],"mappings":";;AAAA;;AAEA,OAAO,IAAMA,YAAY,GAAG;EACxBC,MAAM,EAAE;AACZ,CAAC;;AAED;;AAEA,OAAO,IAAIC,cAAc,GAAG,SAAjBA,cAAcA,CAAID,MAAM,EAAK;EACpC,OAAOA,MAAM,EAAEE,MAAM,CAAC,UAACC,MAAM,EAAEC,IAAI;IAAA,OAAKA,IAAI,CAACC,KAAK,GAAGF,MAAM;EAAA,GAAE,CAAC,CAAC,CAACG,OAAO,CAAC,CAAC,CAAC;AAC9E,CAAC;AAED,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,KAAK,EAAEC,MAAM,EAAK;EAC/B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,eAAe;MAChB,OAAAC,aAAA,KACOH,KAAK;QACRR,MAAM,KAAAY,MAAA,CAAAC,kBAAA,CAAML,KAAK,CAACR,MAAM,IAAES,MAAM,CAACL,IAAI;MAAC;IAG9C,KAAK,oBAAoB;MACrB,IAAMU,KAAK,GAAGN,KAAK,CAACR,MAAM,CAACe,SAAS,CAChC,UAACC,UAAU;QAAA,OAAKA,UAAU,CAACC,EAAE,KAAKR,MAAM,CAACQ,EAAE;MAAA,EAC9C;MAED,IAAIC,SAAS,GAAAL,kBAAA,CAAOL,KAAK,CAACR,MAAM,CAAC;MAEjC,IAAIc,KAAK,IAAE,CAAC,EAAE;QACVI,SAAS,CAACC,MAAM,CAACL,KAAK,EAAE,CAAC,CAAC;MAC9B,CAAC,MAAM;QACHM,OAAO,CAACC,IAAI,6BAAAT,MAAA,CACoBH,MAAM,CAACQ,EAAE,iCACxC;MACL;MAEA,OAAAN,aAAA,KACOH,KAAK;QACRR,MAAM,EAAEkB;MAAS;IAGzB;MACI,OAAOV,KAAK;EAAC;AAEzB,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}